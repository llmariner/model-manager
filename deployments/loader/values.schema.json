{"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/$defs/helm-values","$defs":{"helm-values":{"type":"object","properties":{"affinity":{"$ref":"#/$defs/helm-values.affinity"},"baseModels":{"$ref":"#/$defs/helm-values.baseModels"},"componentStatusSender":{"$ref":"#/$defs/helm-values.componentStatusSender"},"downloader":{"$ref":"#/$defs/helm-values.downloader"},"enable":{"$ref":"#/$defs/helm-values.enable"},"fullnameOverride":{"$ref":"#/$defs/helm-values.fullnameOverride"},"global":{"$ref":"#/$defs/helm-values.global"},"huggingFaceSecret":{"$ref":"#/$defs/helm-values.huggingFaceSecret"},"image":{"$ref":"#/$defs/helm-values.image"},"modelLoadInterval":{"$ref":"#/$defs/helm-values.modelLoadInterval"},"modelManagerServerWorkerServiceAddr":{"$ref":"#/$defs/helm-values.modelManagerServerWorkerServiceAddr"},"models":{"$ref":"#/$defs/helm-values.models"},"nameOverride":{"$ref":"#/$defs/helm-values.nameOverride"},"nodeSelector":{"$ref":"#/$defs/helm-values.nodeSelector"},"objectStore":{"$ref":"#/$defs/helm-values.objectStore"},"persistentVolume":{"$ref":"#/$defs/helm-values.persistentVolume"},"podAnnotations":{"$ref":"#/$defs/helm-values.podAnnotations"},"podSecurityContext":{"$ref":"#/$defs/helm-values.podSecurityContext"},"replicaCount":{"$ref":"#/$defs/helm-values.replicaCount"},"resources":{"$ref":"#/$defs/helm-values.resources"},"runOnce":{"$ref":"#/$defs/helm-values.runOnce"},"securityContext":{"$ref":"#/$defs/helm-values.securityContext"},"serviceAccount":{"$ref":"#/$defs/helm-values.serviceAccount"},"tolerations":{"$ref":"#/$defs/helm-values.tolerations"},"version":{"$ref":"#/$defs/helm-values.version"},"volumeMounts":{"$ref":"#/$defs/helm-values.volumeMounts"},"volumes":{"$ref":"#/$defs/helm-values.volumes"}},"additionalProperties":false},"helm-values.affinity":{"description":"A Kubernetes Affinity, if required.\nFor more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node).\n\nFor example:\naffinity:\n  nodeAffinity:\n   requiredDuringSchedulingIgnoredDuringExecution:\n     nodeSelectorTerms:\n     - matchExpressions:\n       - key: foo.bar.com/role\n         operator: In\n         values:\n         - master","type":"object"},"helm-values.baseModels":{"description":"The list of base models to load into LLMariner.\nFor more information, see [Supported Open Models](https://llmariner.ai/docs/features/models/).\n\nFor example:\nbaseModels:\n- google/gemma-2b-it-q4_0\n- meta-llama/Meta-Llama-3.1-8B-Instruct-q4_0\nIf you want to load a specific GGUF file in a HuggingFace repo, you can specify the filename with the following format:\n\u003crepo name\u003e/\u003cfilename\u003e. For example, lmstudio-community/phi-4-GGUF/phi-4-Q3_K_L.gguf will download only phi-4-Q3_K_L.gguf\nunder the repo while lmstudio-community/phi-4-GGUF will download all GGUFs in the repo.","type":"array","items":{}},"helm-values.componentStatusSender":{"type":"object","properties":{"clusterManagerServerWorkerServiceAddr":{"$ref":"#/$defs/helm-values.componentStatusSender.clusterManagerServerWorkerServiceAddr"},"enable":{"$ref":"#/$defs/helm-values.componentStatusSender.enable"},"initialDelay":{"$ref":"#/$defs/helm-values.componentStatusSender.initialDelay"},"interval":{"$ref":"#/$defs/helm-values.componentStatusSender.interval"},"name":{"$ref":"#/$defs/helm-values.componentStatusSender.name"}},"additionalProperties":false},"helm-values.componentStatusSender.clusterManagerServerWorkerServiceAddr":{"description":"The address of the cluster-manager-server to call worker services.","type":"string","default":"cluster-manager-server-worker-service-grpc:8082"},"helm-values.componentStatusSender.enable":{"description":"The flag to enable sending component status to the cluster-manager-server.","type":"boolean","default":true},"helm-values.componentStatusSender.initialDelay":{"description":"initialDelay is the time to wait before starting the sender.","type":"string","default":"1m"},"helm-values.componentStatusSender.interval":{"description":"The interval time to send the component status.","type":"string","default":"15m"},"helm-values.componentStatusSender.name":{"description":"The name of the component.","type":"string","default":"model-manager-loader"},"helm-values.downloader":{"type":"object","properties":{"huggingFace":{"$ref":"#/$defs/helm-values.downloader.huggingFace"},"kind":{"$ref":"#/$defs/helm-values.downloader.kind"},"ollama":{"$ref":"#/$defs/helm-values.downloader.ollama"},"s3":{"$ref":"#/$defs/helm-values.downloader.s3"}},"additionalProperties":false},"helm-values.downloader.huggingFace":{"type":"object","properties":{"cacheDir":{"$ref":"#/$defs/helm-values.downloader.huggingFace.cacheDir"}},"additionalProperties":false},"helm-values.downloader.huggingFace.cacheDir":{"description":"The path to the cash directory for the huggingface hub.","type":"string","default":"/home/.cache/huggingface/hub"},"helm-values.downloader.kind":{"description":"The kind name indicating where the downloader gets models from.","type":"string","default":"s3"},"helm-values.downloader.ollama":{"type":"object","properties":{"port":{"$ref":"#/$defs/helm-values.downloader.ollama.port"}},"additionalProperties":false},"helm-values.downloader.ollama.port":{"description":"The port number for ollama server.","type":"number","default":11434},"helm-values.downloader.s3":{"type":"object","properties":{"assumeRole":{"$ref":"#/$defs/helm-values.downloader.s3.assumeRole"},"bucket":{"$ref":"#/$defs/helm-values.downloader.s3.bucket"},"endpointUrl":{"$ref":"#/$defs/helm-values.downloader.s3.endpointUrl"},"isPublic":{"$ref":"#/$defs/helm-values.downloader.s3.isPublic"},"pathPrefix":{"$ref":"#/$defs/helm-values.downloader.s3.pathPrefix"},"region":{"$ref":"#/$defs/helm-values.downloader.s3.region"}},"additionalProperties":false},"helm-values.downloader.s3.assumeRole":{"description":"Optional AssumeRole.\nFor more information, see [AssumeRole](https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html).","type":"object"},"helm-values.downloader.s3.bucket":{"description":"The bucket name where the models are stored.","type":"string","default":"llm-operator-models"},"helm-values.downloader.s3.endpointUrl":{"description":"The s3 endpoint URL. Optional.","type":"string","default":"https://s3.us-west-2.amazonaws.com"},"helm-values.downloader.s3.isPublic":{"description":"Set to true if the bucket is public and we don't want to use the credential attached to the pod.","type":"boolean","default":true},"helm-values.downloader.s3.pathPrefix":{"description":"The path prefix of the model.","type":"string","default":"v1/base-models"},"helm-values.downloader.s3.region":{"description":"The region name where the models are stored.","type":"string","default":"us-west-2"},"helm-values.enable":{"description":"This field can be used as a condition when using it as a dependency. This definition is only here as a placeholder such that it is included in the json schema.","type":"boolean"},"helm-values.fullnameOverride":{"description":"Override the \"model-manager-loader.fullname\" value. This value is used as part of most of the names of the resources created by this Helm chart.","type":"string"},"helm-values.global":{"description":"Global values shared across all (sub)charts","type":"object","properties":{"awsSecret":{"$ref":"#/$defs/helm-values.global.awsSecret"},"objectStore":{"$ref":"#/$defs/helm-values.global.objectStore"},"worker":{"$ref":"#/$defs/helm-values.global.worker"}}},"helm-values.global.awsSecret":{"type":"object","properties":{"accessKeyIdKey":{"$ref":"#/$defs/helm-values.global.awsSecret.accessKeyIdKey"},"name":{"$ref":"#/$defs/helm-values.global.awsSecret.name"},"secretAccessKeyKey":{"$ref":"#/$defs/helm-values.global.awsSecret.secretAccessKeyKey"}}},"helm-values.global.awsSecret.accessKeyIdKey":{"description":"The key name with an access key ID set.","type":"string","default":"accessKeyId"},"helm-values.global.awsSecret.name":{"description":"The secret name.","type":"string"},"helm-values.global.awsSecret.secretAccessKeyKey":{"description":"The key name with a secret access key set.","type":"string","default":"secretAccessKey"},"helm-values.global.objectStore":{"type":"object","properties":{"s3":{"$ref":"#/$defs/helm-values.global.objectStore.s3"}}},"helm-values.global.objectStore.s3":{"type":"object","properties":{"assumeRole":{"$ref":"#/$defs/helm-values.global.objectStore.s3.assumeRole"},"bucket":{"$ref":"#/$defs/helm-values.global.objectStore.s3.bucket"},"endpointUrl":{"$ref":"#/$defs/helm-values.global.objectStore.s3.endpointUrl"},"region":{"$ref":"#/$defs/helm-values.global.objectStore.s3.region"}}},"helm-values.global.objectStore.s3.assumeRole":{"description":"Optional AssumeRole.\nFor more information, see [AssumeRole](https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html).","type":"object"},"helm-values.global.objectStore.s3.bucket":{"description":"The bucket name to store data.","type":"string","default":"llmariner"},"helm-values.global.objectStore.s3.endpointUrl":{"description":"Optional endpoint URL for the object store.","type":"string"},"helm-values.global.objectStore.s3.region":{"description":"The region name.","type":"string","default":"dummy"},"helm-values.global.worker":{"type":"object","properties":{"controlPlaneAddr":{"$ref":"#/$defs/helm-values.global.worker.controlPlaneAddr"},"registrationKeySecret":{"$ref":"#/$defs/helm-values.global.worker.registrationKeySecret"},"tls":{"$ref":"#/$defs/helm-values.global.worker.tls"}}},"helm-values.global.worker.controlPlaneAddr":{"description":"If specified, use this address for accessing the control-plane. This is necessary when installing LLMariner in a multi-cluster mode. For more information, see [Install across Multiple Clusters](https://llmariner.ai/docs/setup/install/multi_cluster_production/).","type":"string","default":""},"helm-values.global.worker.registrationKeySecret":{"type":"object","properties":{"key":{"$ref":"#/$defs/helm-values.global.worker.registrationKeySecret.key"},"name":{"$ref":"#/$defs/helm-values.global.worker.registrationKeySecret.name"}}},"helm-values.global.worker.registrationKeySecret.key":{"description":"The key name with a registration key set.","type":"string","default":"key"},"helm-values.global.worker.registrationKeySecret.name":{"description":"The secret name. `default-cluster-registration-key` is available when the control-plane and worker-plane are in the same cluster. This Secret is generated by cluster-manager-server as default. For more information, see [Install across Multiple Clusters](https://llmariner.ai/docs/setup/install/multi_cluster_production/).","type":"string","default":"default-cluster-registration-key"},"helm-values.global.worker.tls":{"type":"object","properties":{"enable":{"$ref":"#/$defs/helm-values.global.worker.tls.enable"}}},"helm-values.global.worker.tls.enable":{"description":"The flag to enable TLS access to the control-plane.","type":"boolean","default":false},"helm-values.huggingFaceSecret":{"type":"object","properties":{"apiKeyKey":{"$ref":"#/$defs/helm-values.huggingFaceSecret.apiKeyKey"},"name":{"$ref":"#/$defs/helm-values.huggingFaceSecret.name"}},"additionalProperties":false},"helm-values.huggingFaceSecret.apiKeyKey":{"description":"The key name with an huggingface hub token set.","type":"string","default":"key"},"helm-values.huggingFaceSecret.name":{"description":"The secret name.","type":"string"},"helm-values.image":{"type":"object","properties":{"pullPolicy":{"$ref":"#/$defs/helm-values.image.pullPolicy"},"repository":{"$ref":"#/$defs/helm-values.image.repository"}},"additionalProperties":false},"helm-values.image.pullPolicy":{"description":"Kubernetes imagePullPolicy on Deployment.","type":"string","default":"IfNotPresent"},"helm-values.image.repository":{"description":"The container image name.","type":"string","default":"public.ecr.aws/cloudnatix/llmariner/model-manager-loader"},"helm-values.modelLoadInterval":{"description":"The interval time to load models.","type":"string","default":"30s"},"helm-values.modelManagerServerWorkerServiceAddr":{"description":"The following default values work if model-manager-server runs in the same namespace.","type":"string","default":"model-manager-server-worker-service-grpc:8082"},"helm-values.models":{"description":"The list of fine-tuned or quantized models to load into LLMariner. adapterType: One of `lora` or `qlora`. quantizationType: One of `gguf` or `awq`.\n\nFor example:\nmodels:\n- model: google/gemma-2b-it-q4_0\n  baseMode: google/gemma-2b-it\n  quantizationType: \"gguf\"","type":"array","items":{}},"helm-values.nameOverride":{"description":"Override the \"model-manager-loader.name\" value, which is used to annotate some of the resources that are created by this Chart (using \"app.kubernetes.io/name\").","type":"string"},"helm-values.nodeSelector":{"description":"The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with matching labels. For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).","type":"object"},"helm-values.objectStore":{"type":"object","properties":{"s3":{"$ref":"#/$defs/helm-values.objectStore.s3"}},"additionalProperties":false},"helm-values.objectStore.s3":{"type":"object","properties":{"baseModelPathPrefix":{"$ref":"#/$defs/helm-values.objectStore.s3.baseModelPathPrefix"},"pathPrefix":{"$ref":"#/$defs/helm-values.objectStore.s3.pathPrefix"}},"additionalProperties":false},"helm-values.objectStore.s3.baseModelPathPrefix":{"description":"The prefix name to append to the base-model path.","type":"string","default":"base-models"},"helm-values.objectStore.s3.pathPrefix":{"description":"The prefix name to append to the model path.","type":"string","default":"models"},"helm-values.persistentVolume":{"type":"object","properties":{"accessModes":{"$ref":"#/$defs/helm-values.persistentVolume.accessModes"},"enabled":{"$ref":"#/$defs/helm-values.persistentVolume.enabled"},"existingClaim":{"$ref":"#/$defs/helm-values.persistentVolume.existingClaim"},"selector":{"$ref":"#/$defs/helm-values.persistentVolume.selector"},"size":{"$ref":"#/$defs/helm-values.persistentVolume.size"},"storageClassName":{"$ref":"#/$defs/helm-values.persistentVolume.storageClassName"},"volumeBindingMode":{"$ref":"#/$defs/helm-values.persistentVolume.volumeBindingMode"},"volumeName":{"$ref":"#/$defs/helm-values.persistentVolume.volumeName"}},"additionalProperties":false},"helm-values.persistentVolume.accessModes":{"type":"array","items":{"$ref":"#/$defs/helm-values.persistentVolume.accessModes[0]"}},"helm-values.persistentVolume.accessModes[0]":{"type":"string","default":"ReadWriteOnce"},"helm-values.persistentVolume.enabled":{"description":"If true, use a PVC. If false, use emptyDir.","type":"boolean","default":false},"helm-values.persistentVolume.existingClaim":{"description":"If defined, the loader uses the given PVC and does not create a new one. NOTE: PVC must be manually created before the volume is bound.","type":"string"},"helm-values.persistentVolume.selector":{"description":"If defined, the loader used the PVC matched with this selectors. NOTE: PVC must be manually created before the volume is bound. For more information, see [Persistent Volume](https://kubernetes.io/docs/concepts/storage/persistent-volumes/)\n\nFor example:\nselector:\n matchLabels:\n   release: \"stable\"\n matchExpressions:\n   - { key: environment, operator: In, values: [ dev ] }","type":"object"},"helm-values.persistentVolume.size":{"description":"The size of volume.","type":"string","default":"100Gi"},"helm-values.persistentVolume.storageClassName":{"description":"The name of the storage class for serving a persistent volume.","type":"string","default":"standard"},"helm-values.persistentVolume.volumeBindingMode":{"description":"If defined, the engine uses the given binding-mode for the volume.","type":"string"},"helm-values.persistentVolume.volumeName":{"description":"If defined, the loader Deployment uses the existing PV that has been provisioned in advance.","type":"string"},"helm-values.podAnnotations":{"description":"Optional additional annotations to add to the Deployment Pods.","type":"object"},"helm-values.podSecurityContext":{"description":"Security Context for the model-manager-loader pod. For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).","type":"object","default":{"fsGroup":2000}},"helm-values.replicaCount":{"description":"The number of replicas for the model-manager-loader Deployment.","type":"number","default":1},"helm-values.resources":{"description":"Resources to provide to the model-manager-loader pod. For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-Containers/).\n\nFor example:\nrequests:\n  cpu: 10m\n  memory: 32Mi","type":"object","default":{"limits":{"cpu":"250m"},"requests":{"cpu":"250m","memory":"500Mi"}}},"helm-values.runOnce":{"description":"Specify whether to load models once at startup time.","type":"boolean","default":false},"helm-values.securityContext":{"description":"Security Context for the model-manager-loader container. For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).","type":"object","default":{"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}},"helm-values.serviceAccount":{"type":"object","properties":{"create":{"$ref":"#/$defs/helm-values.serviceAccount.create"},"name":{"$ref":"#/$defs/helm-values.serviceAccount.name"}},"additionalProperties":false},"helm-values.serviceAccount.create":{"description":"Specifies whether a service account should be created.","type":"boolean","default":false},"helm-values.serviceAccount.name":{"description":"The name of the service account to use. If not set and create is true, a name is generated using the fullname template.","type":"string"},"helm-values.tolerations":{"description":"A list of Kubernetes Tolerations, if required.\nFor more information, see [Taints and Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).\n\nFor example:\ntolerations:\n- key: foo.bar.com/role\n  operator: Equal\n  value: master\n  effect: NoSchedule","type":"array","items":{}},"helm-values.version":{"description":"Override the container image tag to deploy by setting this variable. If no value is set, the chart's appVersion will be used.","type":"string"},"helm-values.volumeMounts":{"description":"Additional volume mounts to add to the model-manager-loader container. For more information, see [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/).","type":"array","items":{}},"helm-values.volumes":{"description":"Additional volumes to add to the model-manager-loader pod. For more information, see [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/).","type":"array","items":{}}}}
