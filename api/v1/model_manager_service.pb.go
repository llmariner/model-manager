// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1/model_manager_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModelFormat int32

const (
	ModelFormat_MODEL_FORMAT_UNSPECIFIED  ModelFormat = 0
	ModelFormat_MODEL_FORMAT_GGUF         ModelFormat = 1
	ModelFormat_MODEL_FORMAT_HUGGING_FACE ModelFormat = 2
	// Model format for Nvidia Triton Inference Server. This model files include the tokenizer configuration
	// of the original model, compiled model files for TensorRT-LLM backend, and configuration files for
	// Triton Inference Server.
	ModelFormat_MODEL_FORMAT_NVIDIA_TRITON ModelFormat = 3
	ModelFormat_MODEL_FORMAT_OLLAMA        ModelFormat = 4
)

// Enum value maps for ModelFormat.
var (
	ModelFormat_name = map[int32]string{
		0: "MODEL_FORMAT_UNSPECIFIED",
		1: "MODEL_FORMAT_GGUF",
		2: "MODEL_FORMAT_HUGGING_FACE",
		3: "MODEL_FORMAT_NVIDIA_TRITON",
		4: "MODEL_FORMAT_OLLAMA",
	}
	ModelFormat_value = map[string]int32{
		"MODEL_FORMAT_UNSPECIFIED":   0,
		"MODEL_FORMAT_GGUF":          1,
		"MODEL_FORMAT_HUGGING_FACE":  2,
		"MODEL_FORMAT_NVIDIA_TRITON": 3,
		"MODEL_FORMAT_OLLAMA":        4,
	}
)

func (x ModelFormat) Enum() *ModelFormat {
	p := new(ModelFormat)
	*p = x
	return p
}

func (x ModelFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_model_manager_service_proto_enumTypes[0].Descriptor()
}

func (ModelFormat) Type() protoreflect.EnumType {
	return &file_api_v1_model_manager_service_proto_enumTypes[0]
}

func (x ModelFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFormat.Descriptor instead.
func (ModelFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{0}
}

type ModelLoadingStatus int32

const (
	ModelLoadingStatus_MODEL_LOADING_STATUS_UNSPECIFIED ModelLoadingStatus = 0
	// Intial status when the model creation is requested.
	ModelLoadingStatus_MODEL_LOADING_STATUS_REQUESTED ModelLoadingStatus = 1
	// Loading status when the model is being loaded.
	ModelLoadingStatus_MODEL_LOADING_STATUS_LOADING ModelLoadingStatus = 2
	// Succeeded status when the model loading is succeeded.
	ModelLoadingStatus_MODEL_LOADING_STATUS_SUCCEEDED ModelLoadingStatus = 3
	// Failed status when the model loading is failed.
	ModelLoadingStatus_MODEL_LOADING_STATUS_FAILED ModelLoadingStatus = 4
)

// Enum value maps for ModelLoadingStatus.
var (
	ModelLoadingStatus_name = map[int32]string{
		0: "MODEL_LOADING_STATUS_UNSPECIFIED",
		1: "MODEL_LOADING_STATUS_REQUESTED",
		2: "MODEL_LOADING_STATUS_LOADING",
		3: "MODEL_LOADING_STATUS_SUCCEEDED",
		4: "MODEL_LOADING_STATUS_FAILED",
	}
	ModelLoadingStatus_value = map[string]int32{
		"MODEL_LOADING_STATUS_UNSPECIFIED": 0,
		"MODEL_LOADING_STATUS_REQUESTED":   1,
		"MODEL_LOADING_STATUS_LOADING":     2,
		"MODEL_LOADING_STATUS_SUCCEEDED":   3,
		"MODEL_LOADING_STATUS_FAILED":      4,
	}
)

func (x ModelLoadingStatus) Enum() *ModelLoadingStatus {
	p := new(ModelLoadingStatus)
	*p = x
	return p
}

func (x ModelLoadingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelLoadingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_model_manager_service_proto_enumTypes[1].Descriptor()
}

func (ModelLoadingStatus) Type() protoreflect.EnumType {
	return &file_api_v1_model_manager_service_proto_enumTypes[1]
}

func (x ModelLoadingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelLoadingStatus.Descriptor instead.
func (ModelLoadingStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{1}
}

type SourceRepository int32

const (
	SourceRepository_SOURCE_REPOSITORY_UNSPECIFIED  SourceRepository = 0
	SourceRepository_SOURCE_REPOSITORY_OBJECT_STORE SourceRepository = 1
	SourceRepository_SOURCE_REPOSITORY_HUGGING_FACE SourceRepository = 2
	SourceRepository_SOURCE_REPOSITORY_OLLAMA       SourceRepository = 3
	SourceRepository_SOURCE_REPOSITORY_FINE_TUNING  SourceRepository = 4
)

// Enum value maps for SourceRepository.
var (
	SourceRepository_name = map[int32]string{
		0: "SOURCE_REPOSITORY_UNSPECIFIED",
		1: "SOURCE_REPOSITORY_OBJECT_STORE",
		2: "SOURCE_REPOSITORY_HUGGING_FACE",
		3: "SOURCE_REPOSITORY_OLLAMA",
		4: "SOURCE_REPOSITORY_FINE_TUNING",
	}
	SourceRepository_value = map[string]int32{
		"SOURCE_REPOSITORY_UNSPECIFIED":  0,
		"SOURCE_REPOSITORY_OBJECT_STORE": 1,
		"SOURCE_REPOSITORY_HUGGING_FACE": 2,
		"SOURCE_REPOSITORY_OLLAMA":       3,
		"SOURCE_REPOSITORY_FINE_TUNING":  4,
	}
)

func (x SourceRepository) Enum() *SourceRepository {
	p := new(SourceRepository)
	*p = x
	return p
}

func (x SourceRepository) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceRepository) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_model_manager_service_proto_enumTypes[2].Descriptor()
}

func (SourceRepository) Type() protoreflect.EnumType {
	return &file_api_v1_model_manager_service_proto_enumTypes[2]
}

func (x SourceRepository) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceRepository.Descriptor instead.
func (SourceRepository) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{2}
}

type AdapterType int32

const (
	AdapterType_ADAPTER_TYPE_UNSPECIFIED AdapterType = 0
	AdapterType_ADAPTER_TYPE_LORA        AdapterType = 1
	AdapterType_ADAPTER_TYPE_QLORA       AdapterType = 2
)

// Enum value maps for AdapterType.
var (
	AdapterType_name = map[int32]string{
		0: "ADAPTER_TYPE_UNSPECIFIED",
		1: "ADAPTER_TYPE_LORA",
		2: "ADAPTER_TYPE_QLORA",
	}
	AdapterType_value = map[string]int32{
		"ADAPTER_TYPE_UNSPECIFIED": 0,
		"ADAPTER_TYPE_LORA":        1,
		"ADAPTER_TYPE_QLORA":       2,
	}
)

func (x AdapterType) Enum() *AdapterType {
	p := new(AdapterType)
	*p = x
	return p
}

func (x AdapterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdapterType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_model_manager_service_proto_enumTypes[3].Descriptor()
}

func (AdapterType) Type() protoreflect.EnumType {
	return &file_api_v1_model_manager_service_proto_enumTypes[3]
}

func (x AdapterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdapterType.Descriptor instead.
func (AdapterType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{3}
}

type QuantizationType int32

const (
	QuantizationType_QUANTIZATION_TYPE_UNSPECIFIED QuantizationType = 0
	QuantizationType_QUANTIZATION_TYPE_GGUF        QuantizationType = 1
	QuantizationType_QUANTIZATION_TYPE_AWQ         QuantizationType = 2
)

// Enum value maps for QuantizationType.
var (
	QuantizationType_name = map[int32]string{
		0: "QUANTIZATION_TYPE_UNSPECIFIED",
		1: "QUANTIZATION_TYPE_GGUF",
		2: "QUANTIZATION_TYPE_AWQ",
	}
	QuantizationType_value = map[string]int32{
		"QUANTIZATION_TYPE_UNSPECIFIED": 0,
		"QUANTIZATION_TYPE_GGUF":        1,
		"QUANTIZATION_TYPE_AWQ":         2,
	}
)

func (x QuantizationType) Enum() *QuantizationType {
	p := new(QuantizationType)
	*p = x
	return p
}

func (x QuantizationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuantizationType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_model_manager_service_proto_enumTypes[4].Descriptor()
}

func (QuantizationType) Type() protoreflect.EnumType {
	return &file_api_v1_model_manager_service_proto_enumTypes[4]
}

func (x QuantizationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuantizationType.Descriptor instead.
func (QuantizationType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{4}
}

// ModelFormats is a list of model formats. Used to store marshalled data into a store.
type ModelFormats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Formats []ModelFormat `protobuf:"varint,1,rep,packed,name=formats,proto3,enum=llmariner.models.server.v1.ModelFormat" json:"formats,omitempty"`
}

func (x *ModelFormats) Reset() {
	*x = ModelFormats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFormats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFormats) ProtoMessage() {}

func (x *ModelFormats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFormats.ProtoReflect.Descriptor instead.
func (*ModelFormats) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{0}
}

func (x *ModelFormats) GetFormats() []ModelFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Object  string `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	OwnedBy string `protobuf:"bytes,4,opt,name=owned_by,json=ownedBy,proto3" json:"owned_by,omitempty"`
	// loading_status is set when the model is being loaded.
	// This is not in the Open AI API specification.
	LoadingStatus ModelLoadingStatus `protobuf:"varint,5,opt,name=loading_status,json=loadingStatus,proto3,enum=llmariner.models.server.v1.ModelLoadingStatus" json:"loading_status,omitempty"`
	// source_repository is the source repository of the model. Set for base models created from the CreateModel API request.
	// This is not in the Open AI API specification.
	SourceRepository SourceRepository `protobuf:"varint,6,opt,name=source_repository,json=sourceRepository,proto3,enum=llmariner.models.server.v1.SourceRepository" json:"source_repository,omitempty"`
	// loading_failure_reason is set when the model loading is failed to show the failure reason.
	// This is not in the Open AI API specification.
	LoadingFailureReason string `protobuf:"bytes,7,opt,name=loading_failure_reason,json=loadingFailureReason,proto3" json:"loading_failure_reason,omitempty"`
	// formats is the supported formats of the model.
	// This is not in the Open AI API specification.
	Formats []ModelFormat `protobuf:"varint,8,rep,packed,name=formats,proto3,enum=llmariner.models.server.v1.ModelFormat" json:"formats,omitempty"`
	// This is not in the Open AI API specification.
	IsBaseModel bool `protobuf:"varint,9,opt,name=is_base_model,json=isBaseModel,proto3" json:"is_base_model,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{1}
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Model) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *Model) GetOwnedBy() string {
	if x != nil {
		return x.OwnedBy
	}
	return ""
}

func (x *Model) GetLoadingStatus() ModelLoadingStatus {
	if x != nil {
		return x.LoadingStatus
	}
	return ModelLoadingStatus_MODEL_LOADING_STATUS_UNSPECIFIED
}

func (x *Model) GetSourceRepository() SourceRepository {
	if x != nil {
		return x.SourceRepository
	}
	return SourceRepository_SOURCE_REPOSITORY_UNSPECIFIED
}

func (x *Model) GetLoadingFailureReason() string {
	if x != nil {
		return x.LoadingFailureReason
	}
	return ""
}

func (x *Model) GetFormats() []ModelFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *Model) GetIsBaseModel() bool {
	if x != nil {
		return x.IsBaseModel
	}
	return false
}

type CreateModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceRepository SourceRepository `protobuf:"varint,2,opt,name=source_repository,json=sourceRepository,proto3,enum=llmariner.models.server.v1.SourceRepository" json:"source_repository,omitempty"`
}

func (x *CreateModelRequest) Reset() {
	*x = CreateModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelRequest) ProtoMessage() {}

func (x *CreateModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelRequest.ProtoReflect.Descriptor instead.
func (*CreateModelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateModelRequest) GetSourceRepository() SourceRepository {
	if x != nil {
		return x.SourceRepository
	}
	return SourceRepository_SOURCE_REPOSITORY_UNSPECIFIED
}

type ListModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// include_loading_models is a flag to include loading models in the response.
	//
	// This is not in the Open AI API specification.
	IncludeLoadingModels bool `protobuf:"varint,1,opt,name=include_loading_models,json=includeLoadingModels,proto3" json:"include_loading_models,omitempty"`
	// after is the identifier for the last model from the previous pagination request.
	// This is not in the Open AI API specification.
	After string `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	// limit is the number of non-base models to retrieve. Defaults to 100.
	// This is not in the Open AI API specification.
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListModelsRequest) Reset() {
	*x = ListModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsRequest) ProtoMessage() {}

func (x *ListModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsRequest.ProtoReflect.Descriptor instead.
func (*ListModelsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListModelsRequest) GetIncludeLoadingModels() bool {
	if x != nil {
		return x.IncludeLoadingModels
	}
	return false
}

func (x *ListModelsRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *ListModelsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object string   `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Data   []*Model `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	// This is not in the Open AI API specification.
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// total_items is the total number of non-base models. This is not defined in the
	// OpenAI API spec, but we include here for better UX in the frontend.
	TotalItems int32 `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
}

func (x *ListModelsResponse) Reset() {
	*x = ListModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsResponse) ProtoMessage() {}

func (x *ListModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsResponse.ProtoReflect.Descriptor instead.
func (*ListModelsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListModelsResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ListModelsResponse) GetData() []*Model {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListModelsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListModelsResponse) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

type GetModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// include_loading_model is a flag to include an loading model in the response.
	//
	// This is not in the Open AI API specification.
	IncludeLoadingModel bool `protobuf:"varint,2,opt,name=include_loading_model,json=includeLoadingModel,proto3" json:"include_loading_model,omitempty"`
}

func (x *GetModelRequest) Reset() {
	*x = GetModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelRequest) ProtoMessage() {}

func (x *GetModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelRequest.ProtoReflect.Descriptor instead.
func (*GetModelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetModelRequest) GetIncludeLoadingModel() bool {
	if x != nil {
		return x.IncludeLoadingModel
	}
	return false
}

type DeleteModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteModelRequest) Reset() {
	*x = DeleteModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModelRequest) ProtoMessage() {}

func (x *DeleteModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModelRequest.ProtoReflect.Descriptor instead.
func (*DeleteModelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object  string `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Deleted bool   `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DeleteModelResponse) Reset() {
	*x = DeleteModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModelResponse) ProtoMessage() {}

func (x *DeleteModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModelResponse.ProtoReflect.Descriptor instead.
func (*DeleteModelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteModelResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteModelResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *DeleteModelResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type ListBaseModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBaseModelsRequest) Reset() {
	*x = ListBaseModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBaseModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBaseModelsRequest) ProtoMessage() {}

func (x *ListBaseModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBaseModelsRequest.ProtoReflect.Descriptor instead.
func (*ListBaseModelsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{8}
}

type BaseModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Object  string `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *BaseModel) Reset() {
	*x = BaseModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseModel) ProtoMessage() {}

func (x *BaseModel) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseModel.ProtoReflect.Descriptor instead.
func (*BaseModel) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{9}
}

func (x *BaseModel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseModel) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *BaseModel) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type ListBaseModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object string       `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Data   []*BaseModel `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListBaseModelsResponse) Reset() {
	*x = ListBaseModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBaseModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBaseModelsResponse) ProtoMessage() {}

func (x *ListBaseModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBaseModelsResponse.ProtoReflect.Descriptor instead.
func (*ListBaseModelsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListBaseModelsResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ListBaseModelsResponse) GetData() []*BaseModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type StorageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathPrefix string `protobuf:"bytes,1,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
}

func (x *StorageConfig) Reset() {
	*x = StorageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig) ProtoMessage() {}

func (x *StorageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig.ProtoReflect.Descriptor instead.
func (*StorageConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{11}
}

func (x *StorageConfig) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

type CreateStorageConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathPrefix string `protobuf:"bytes,1,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
}

func (x *CreateStorageConfigRequest) Reset() {
	*x = CreateStorageConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageConfigRequest) ProtoMessage() {}

func (x *CreateStorageConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateStorageConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateStorageConfigRequest) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

type GetStorageConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStorageConfigRequest) Reset() {
	*x = GetStorageConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageConfigRequest) ProtoMessage() {}

func (x *GetStorageConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageConfigRequest.ProtoReflect.Descriptor instead.
func (*GetStorageConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{13}
}

type RegisterModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the model name.
	Id        string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	BaseModel string `protobuf:"bytes,1,opt,name=base_model,json=baseModel,proto3" json:"base_model,omitempty"`
	// suffix is deprecated, use adapter and quantization instead.
	Suffix         string           `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	OrganizationId string           `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ProjectId      string           `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Adapter        AdapterType      `protobuf:"varint,5,opt,name=adapter,proto3,enum=llmariner.models.server.v1.AdapterType" json:"adapter,omitempty"`
	Quantization   QuantizationType `protobuf:"varint,6,opt,name=quantization,proto3,enum=llmariner.models.server.v1.QuantizationType" json:"quantization,omitempty"`
	Path           string           `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RegisterModelRequest) Reset() {
	*x = RegisterModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterModelRequest) ProtoMessage() {}

func (x *RegisterModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterModelRequest.ProtoReflect.Descriptor instead.
func (*RegisterModelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{14}
}

func (x *RegisterModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterModelRequest) GetBaseModel() string {
	if x != nil {
		return x.BaseModel
	}
	return ""
}

func (x *RegisterModelRequest) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *RegisterModelRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RegisterModelRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RegisterModelRequest) GetAdapter() AdapterType {
	if x != nil {
		return x.Adapter
	}
	return AdapterType_ADAPTER_TYPE_UNSPECIFIED
}

func (x *RegisterModelRequest) GetQuantization() QuantizationType {
	if x != nil {
		return x.Quantization
	}
	return QuantizationType_QUANTIZATION_TYPE_UNSPECIFIED
}

func (x *RegisterModelRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RegisterModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// path is the path where the model is stored.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RegisterModelResponse) Reset() {
	*x = RegisterModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterModelResponse) ProtoMessage() {}

func (x *RegisterModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterModelResponse.ProtoReflect.Descriptor instead.
func (*RegisterModelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterModelResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterModelResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type PublishModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PublishModelRequest) Reset() {
	*x = PublishModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishModelRequest) ProtoMessage() {}

func (x *PublishModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishModelRequest.ProtoReflect.Descriptor instead.
func (*PublishModelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{16}
}

func (x *PublishModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PublishModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishModelResponse) Reset() {
	*x = PublishModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishModelResponse) ProtoMessage() {}

func (x *PublishModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishModelResponse.ProtoReflect.Descriptor instead.
func (*PublishModelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{17}
}

// GetModelPathRequest is deprecated, use GetModelAttributesRequest instead.
type GetModelPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetModelPathRequest) Reset() {
	*x = GetModelPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelPathRequest) ProtoMessage() {}

func (x *GetModelPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelPathRequest.ProtoReflect.Descriptor instead.
func (*GetModelPathRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetModelPathRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetModelPathResponse is deprecated, use GetModelAttributesResponse instead.
type GetModelPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetModelPathResponse) Reset() {
	*x = GetModelPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelPathResponse) ProtoMessage() {}

func (x *GetModelPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelPathResponse.ProtoReflect.Descriptor instead.
func (*GetModelPathResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetModelPathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ModelAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path         string           `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	BaseModel    string           `protobuf:"bytes,2,opt,name=base_model,json=baseModel,proto3" json:"base_model,omitempty"`
	Adapter      AdapterType      `protobuf:"varint,3,opt,name=adapter,proto3,enum=llmariner.models.server.v1.AdapterType" json:"adapter,omitempty"`
	Quantization QuantizationType `protobuf:"varint,4,opt,name=quantization,proto3,enum=llmariner.models.server.v1.QuantizationType" json:"quantization,omitempty"`
}

func (x *ModelAttributes) Reset() {
	*x = ModelAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelAttributes) ProtoMessage() {}

func (x *ModelAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelAttributes.ProtoReflect.Descriptor instead.
func (*ModelAttributes) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{20}
}

func (x *ModelAttributes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ModelAttributes) GetBaseModel() string {
	if x != nil {
		return x.BaseModel
	}
	return ""
}

func (x *ModelAttributes) GetAdapter() AdapterType {
	if x != nil {
		return x.Adapter
	}
	return AdapterType_ADAPTER_TYPE_UNSPECIFIED
}

func (x *ModelAttributes) GetQuantization() QuantizationType {
	if x != nil {
		return x.Quantization
	}
	return QuantizationType_QUANTIZATION_TYPE_UNSPECIFIED
}

type GetModelAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetModelAttributesRequest) Reset() {
	*x = GetModelAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelAttributesRequest) ProtoMessage() {}

func (x *GetModelAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelAttributesRequest.ProtoReflect.Descriptor instead.
func (*GetModelAttributesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetModelAttributesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateBaseModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// formats is the supported formats of the base model. If not set, the format is considered as GGUF
	// for backward compatibility.
	Formats []ModelFormat `protobuf:"varint,4,rep,packed,name=formats,proto3,enum=llmariner.models.server.v1.ModelFormat" json:"formats,omitempty"`
	// gguf_model_path is the path of the GGUF model. Set if the model suppors the GGUF formta.
	GgufModelPath    string           `protobuf:"bytes,3,opt,name=gguf_model_path,json=ggufModelPath,proto3" json:"gguf_model_path,omitempty"`
	SourceRepository SourceRepository `protobuf:"varint,5,opt,name=source_repository,json=sourceRepository,proto3,enum=llmariner.models.server.v1.SourceRepository" json:"source_repository,omitempty"`
}

func (x *CreateBaseModelRequest) Reset() {
	*x = CreateBaseModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBaseModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBaseModelRequest) ProtoMessage() {}

func (x *CreateBaseModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBaseModelRequest.ProtoReflect.Descriptor instead.
func (*CreateBaseModelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreateBaseModelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateBaseModelRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateBaseModelRequest) GetFormats() []ModelFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *CreateBaseModelRequest) GetGgufModelPath() string {
	if x != nil {
		return x.GgufModelPath
	}
	return ""
}

func (x *CreateBaseModelRequest) GetSourceRepository() SourceRepository {
	if x != nil {
		return x.SourceRepository
	}
	return SourceRepository_SOURCE_REPOSITORY_UNSPECIFIED
}

type GetBaseModelPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBaseModelPathRequest) Reset() {
	*x = GetBaseModelPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBaseModelPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBaseModelPathRequest) ProtoMessage() {}

func (x *GetBaseModelPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBaseModelPathRequest.ProtoReflect.Descriptor instead.
func (*GetBaseModelPathRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetBaseModelPathRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBaseModelPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Formats []ModelFormat `protobuf:"varint,3,rep,packed,name=formats,proto3,enum=llmariner.models.server.v1.ModelFormat" json:"formats,omitempty"`
	Path    string        `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// gguf_model_path is the path of the GGUF model. Set if the model suppors the GGUF formta.
	GgufModelPath string `protobuf:"bytes,2,opt,name=gguf_model_path,json=ggufModelPath,proto3" json:"gguf_model_path,omitempty"`
}

func (x *GetBaseModelPathResponse) Reset() {
	*x = GetBaseModelPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBaseModelPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBaseModelPathResponse) ProtoMessage() {}

func (x *GetBaseModelPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBaseModelPathResponse.ProtoReflect.Descriptor instead.
func (*GetBaseModelPathResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetBaseModelPathResponse) GetFormats() []ModelFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *GetBaseModelPathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetBaseModelPathResponse) GetGgufModelPath() string {
	if x != nil {
		return x.GgufModelPath
	}
	return ""
}

type CreateHFModelRepoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateHFModelRepoRequest) Reset() {
	*x = CreateHFModelRepoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHFModelRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHFModelRepoRequest) ProtoMessage() {}

func (x *CreateHFModelRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHFModelRepoRequest.ProtoReflect.Descriptor instead.
func (*CreateHFModelRepoRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{25}
}

func (x *CreateHFModelRepoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HFModelRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HFModelRepo) Reset() {
	*x = HFModelRepo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HFModelRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HFModelRepo) ProtoMessage() {}

func (x *HFModelRepo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HFModelRepo.ProtoReflect.Descriptor instead.
func (*HFModelRepo) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{26}
}

func (x *HFModelRepo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetHFModelRepoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetHFModelRepoRequest) Reset() {
	*x = GetHFModelRepoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHFModelRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHFModelRepoRequest) ProtoMessage() {}

func (x *GetHFModelRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHFModelRepoRequest.ProtoReflect.Descriptor instead.
func (*GetHFModelRepoRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetHFModelRepoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AcquireUnloadedBaseModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcquireUnloadedBaseModelRequest) Reset() {
	*x = AcquireUnloadedBaseModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireUnloadedBaseModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireUnloadedBaseModelRequest) ProtoMessage() {}

func (x *AcquireUnloadedBaseModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireUnloadedBaseModelRequest.ProtoReflect.Descriptor instead.
func (*AcquireUnloadedBaseModelRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{28}
}

type AcquireUnloadedBaseModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base_model_id is ID of the acquired base model. Empty if there is no unloaded base model.
	BaseModelId      string           `protobuf:"bytes,1,opt,name=base_model_id,json=baseModelId,proto3" json:"base_model_id,omitempty"`
	SourceRepository SourceRepository `protobuf:"varint,2,opt,name=source_repository,json=sourceRepository,proto3,enum=llmariner.models.server.v1.SourceRepository" json:"source_repository,omitempty"`
}

func (x *AcquireUnloadedBaseModelResponse) Reset() {
	*x = AcquireUnloadedBaseModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireUnloadedBaseModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireUnloadedBaseModelResponse) ProtoMessage() {}

func (x *AcquireUnloadedBaseModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireUnloadedBaseModelResponse.ProtoReflect.Descriptor instead.
func (*AcquireUnloadedBaseModelResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{29}
}

func (x *AcquireUnloadedBaseModelResponse) GetBaseModelId() string {
	if x != nil {
		return x.BaseModelId
	}
	return ""
}

func (x *AcquireUnloadedBaseModelResponse) GetSourceRepository() SourceRepository {
	if x != nil {
		return x.SourceRepository
	}
	return SourceRepository_SOURCE_REPOSITORY_UNSPECIFIED
}

type UpdateBaseModelLoadingStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to LoadingResult:
	//
	//	*UpdateBaseModelLoadingStatusRequest_Success_
	//	*UpdateBaseModelLoadingStatusRequest_Failure_
	LoadingResult isUpdateBaseModelLoadingStatusRequest_LoadingResult `protobuf_oneof:"loading_result"`
}

func (x *UpdateBaseModelLoadingStatusRequest) Reset() {
	*x = UpdateBaseModelLoadingStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBaseModelLoadingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBaseModelLoadingStatusRequest) ProtoMessage() {}

func (x *UpdateBaseModelLoadingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBaseModelLoadingStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateBaseModelLoadingStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateBaseModelLoadingStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *UpdateBaseModelLoadingStatusRequest) GetLoadingResult() isUpdateBaseModelLoadingStatusRequest_LoadingResult {
	if m != nil {
		return m.LoadingResult
	}
	return nil
}

func (x *UpdateBaseModelLoadingStatusRequest) GetSuccess() *UpdateBaseModelLoadingStatusRequest_Success {
	if x, ok := x.GetLoadingResult().(*UpdateBaseModelLoadingStatusRequest_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *UpdateBaseModelLoadingStatusRequest) GetFailure() *UpdateBaseModelLoadingStatusRequest_Failure {
	if x, ok := x.GetLoadingResult().(*UpdateBaseModelLoadingStatusRequest_Failure_); ok {
		return x.Failure
	}
	return nil
}

type isUpdateBaseModelLoadingStatusRequest_LoadingResult interface {
	isUpdateBaseModelLoadingStatusRequest_LoadingResult()
}

type UpdateBaseModelLoadingStatusRequest_Success_ struct {
	Success *UpdateBaseModelLoadingStatusRequest_Success `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

type UpdateBaseModelLoadingStatusRequest_Failure_ struct {
	Failure *UpdateBaseModelLoadingStatusRequest_Failure `protobuf:"bytes,3,opt,name=failure,proto3,oneof"`
}

func (*UpdateBaseModelLoadingStatusRequest_Success_) isUpdateBaseModelLoadingStatusRequest_LoadingResult() {
}

func (*UpdateBaseModelLoadingStatusRequest_Failure_) isUpdateBaseModelLoadingStatusRequest_LoadingResult() {
}

type UpdateBaseModelLoadingStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBaseModelLoadingStatusResponse) Reset() {
	*x = UpdateBaseModelLoadingStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBaseModelLoadingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBaseModelLoadingStatusResponse) ProtoMessage() {}

func (x *UpdateBaseModelLoadingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBaseModelLoadingStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateBaseModelLoadingStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{31}
}

type UpdateBaseModelLoadingStatusRequest_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBaseModelLoadingStatusRequest_Success) Reset() {
	*x = UpdateBaseModelLoadingStatusRequest_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBaseModelLoadingStatusRequest_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBaseModelLoadingStatusRequest_Success) ProtoMessage() {}

func (x *UpdateBaseModelLoadingStatusRequest_Success) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBaseModelLoadingStatusRequest_Success.ProtoReflect.Descriptor instead.
func (*UpdateBaseModelLoadingStatusRequest_Success) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{30, 0}
}

type UpdateBaseModelLoadingStatusRequest_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UpdateBaseModelLoadingStatusRequest_Failure) Reset() {
	*x = UpdateBaseModelLoadingStatusRequest_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_model_manager_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBaseModelLoadingStatusRequest_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBaseModelLoadingStatusRequest_Failure) ProtoMessage() {}

func (x *UpdateBaseModelLoadingStatusRequest_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_model_manager_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBaseModelLoadingStatusRequest_Failure.ProtoReflect.Descriptor instead.
func (*UpdateBaseModelLoadingStatusRequest_Failure) Descriptor() ([]byte, []int) {
	return file_api_v1_model_manager_service_proto_rawDescGZIP(), []int{30, 1}
}

func (x *UpdateBaseModelLoadingStatusRequest_Failure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_api_v1_model_manager_service_proto protoreflect.FileDescriptor

var file_api_v1_model_manager_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51,
	0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x41,
	0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x22, 0xb3, 0x03, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x12, 0x55, 0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x59, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x6f,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x41, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x42, 0x61,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x7f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x59, 0x0a,
	0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x75, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x9f, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c,
	0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x4d, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x6b, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x0d,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x3d,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x19, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xce, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x07, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61,
	0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x3b, 0x0a, 0x15, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x25, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x41, 0x0a, 0x07, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x50, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x82, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x41, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x67, 0x75, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x67,
	0x75, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x59, 0x0a, 0x11, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x99, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x67, 0x75, 0x66, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x67, 0x75, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2e, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a,
	0x0b, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a,
	0x1f, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xa1, 0x01, 0x0a, 0x20, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x55, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x11, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0xbf, 0x02, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x63, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x63, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x1a, 0x21, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x9a,
	0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1c,
	0x0a, 0x18, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x47, 0x47, 0x55,
	0x46, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x5f, 0x48, 0x55, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x43, 0x45,
	0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x4e, 0x56, 0x49, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x52, 0x49, 0x54, 0x4f, 0x4e,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x4f, 0x4c, 0x4c, 0x41, 0x4d, 0x41, 0x10, 0x04, 0x2a, 0xc5, 0x01, 0x0a, 0x12,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4c, 0x4f, 0x41, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x4f, 0x44, 0x45,
	0x4c, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c,
	0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x22,
	0x0a, 0x1e, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4c, 0x4f, 0x41, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x2a, 0xbe, 0x01, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12,
	0x22, 0x0a, 0x1e, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x4f, 0x52, 0x59, 0x5f, 0x48, 0x55, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x43,
	0x45, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x4c, 0x4c, 0x41, 0x4d, 0x41, 0x10,
	0x03, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x46, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x55, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x04, 0x2a, 0x5a, 0x0a, 0x0b, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x44, 0x41, 0x50, 0x54, 0x45, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x44, 0x41, 0x50, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4c, 0x4f, 0x52, 0x41, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x44, 0x41, 0x50,
	0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x4c, 0x4f, 0x52, 0x41, 0x10, 0x02,
	0x2a, 0x6c, 0x0a, 0x10, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x5a, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x51, 0x55, 0x41, 0x4e, 0x54,
	0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x47, 0x55,
	0x46, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x57, 0x51, 0x10, 0x02, 0x32, 0xa1,
	0x05, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x2d,
	0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x12, 0x77, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2b, 0x2e,
	0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x3d, 0x2a, 0x2a, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2e, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x3d, 0x2a, 0x2a, 0x7d, 0x12, 0x77, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2e, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x12, 0x31, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e,
	0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x32, 0xda, 0x0c, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x36, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x6c, 0x6d, 0x61,
	0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2b, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0d, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x30, 0x2e, 0x6c, 0x6c,
	0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x73, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x2f, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69,
	0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72,
	0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x35, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x6c, 0x6d, 0x61,
	0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x32, 0x2e, 0x6c, 0x6c,
	0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x33, 0x2e, 0x6c,
	0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x34,
	0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x22, 0x00, 0x12,
	0x6e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x12, 0x31, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x22, 0x00, 0x12,
	0x97, 0x01, 0x0a, 0x18, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x55, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3b, 0x2e, 0x6c,
	0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6c, 0x6c, 0x6d, 0x61,
	0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x55, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa3, 0x01, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6c, 0x6c,
	0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x6c,
	0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_model_manager_service_proto_rawDescOnce sync.Once
	file_api_v1_model_manager_service_proto_rawDescData = file_api_v1_model_manager_service_proto_rawDesc
)

func file_api_v1_model_manager_service_proto_rawDescGZIP() []byte {
	file_api_v1_model_manager_service_proto_rawDescOnce.Do(func() {
		file_api_v1_model_manager_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_model_manager_service_proto_rawDescData)
	})
	return file_api_v1_model_manager_service_proto_rawDescData
}

var file_api_v1_model_manager_service_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_v1_model_manager_service_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_api_v1_model_manager_service_proto_goTypes = []interface{}{
	(ModelFormat)(0),                                    // 0: llmariner.models.server.v1.ModelFormat
	(ModelLoadingStatus)(0),                             // 1: llmariner.models.server.v1.ModelLoadingStatus
	(SourceRepository)(0),                               // 2: llmariner.models.server.v1.SourceRepository
	(AdapterType)(0),                                    // 3: llmariner.models.server.v1.AdapterType
	(QuantizationType)(0),                               // 4: llmariner.models.server.v1.QuantizationType
	(*ModelFormats)(nil),                                // 5: llmariner.models.server.v1.ModelFormats
	(*Model)(nil),                                       // 6: llmariner.models.server.v1.Model
	(*CreateModelRequest)(nil),                          // 7: llmariner.models.server.v1.CreateModelRequest
	(*ListModelsRequest)(nil),                           // 8: llmariner.models.server.v1.ListModelsRequest
	(*ListModelsResponse)(nil),                          // 9: llmariner.models.server.v1.ListModelsResponse
	(*GetModelRequest)(nil),                             // 10: llmariner.models.server.v1.GetModelRequest
	(*DeleteModelRequest)(nil),                          // 11: llmariner.models.server.v1.DeleteModelRequest
	(*DeleteModelResponse)(nil),                         // 12: llmariner.models.server.v1.DeleteModelResponse
	(*ListBaseModelsRequest)(nil),                       // 13: llmariner.models.server.v1.ListBaseModelsRequest
	(*BaseModel)(nil),                                   // 14: llmariner.models.server.v1.BaseModel
	(*ListBaseModelsResponse)(nil),                      // 15: llmariner.models.server.v1.ListBaseModelsResponse
	(*StorageConfig)(nil),                               // 16: llmariner.models.server.v1.StorageConfig
	(*CreateStorageConfigRequest)(nil),                  // 17: llmariner.models.server.v1.CreateStorageConfigRequest
	(*GetStorageConfigRequest)(nil),                     // 18: llmariner.models.server.v1.GetStorageConfigRequest
	(*RegisterModelRequest)(nil),                        // 19: llmariner.models.server.v1.RegisterModelRequest
	(*RegisterModelResponse)(nil),                       // 20: llmariner.models.server.v1.RegisterModelResponse
	(*PublishModelRequest)(nil),                         // 21: llmariner.models.server.v1.PublishModelRequest
	(*PublishModelResponse)(nil),                        // 22: llmariner.models.server.v1.PublishModelResponse
	(*GetModelPathRequest)(nil),                         // 23: llmariner.models.server.v1.GetModelPathRequest
	(*GetModelPathResponse)(nil),                        // 24: llmariner.models.server.v1.GetModelPathResponse
	(*ModelAttributes)(nil),                             // 25: llmariner.models.server.v1.ModelAttributes
	(*GetModelAttributesRequest)(nil),                   // 26: llmariner.models.server.v1.GetModelAttributesRequest
	(*CreateBaseModelRequest)(nil),                      // 27: llmariner.models.server.v1.CreateBaseModelRequest
	(*GetBaseModelPathRequest)(nil),                     // 28: llmariner.models.server.v1.GetBaseModelPathRequest
	(*GetBaseModelPathResponse)(nil),                    // 29: llmariner.models.server.v1.GetBaseModelPathResponse
	(*CreateHFModelRepoRequest)(nil),                    // 30: llmariner.models.server.v1.CreateHFModelRepoRequest
	(*HFModelRepo)(nil),                                 // 31: llmariner.models.server.v1.HFModelRepo
	(*GetHFModelRepoRequest)(nil),                       // 32: llmariner.models.server.v1.GetHFModelRepoRequest
	(*AcquireUnloadedBaseModelRequest)(nil),             // 33: llmariner.models.server.v1.AcquireUnloadedBaseModelRequest
	(*AcquireUnloadedBaseModelResponse)(nil),            // 34: llmariner.models.server.v1.AcquireUnloadedBaseModelResponse
	(*UpdateBaseModelLoadingStatusRequest)(nil),         // 35: llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest
	(*UpdateBaseModelLoadingStatusResponse)(nil),        // 36: llmariner.models.server.v1.UpdateBaseModelLoadingStatusResponse
	(*UpdateBaseModelLoadingStatusRequest_Success)(nil), // 37: llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest.Success
	(*UpdateBaseModelLoadingStatusRequest_Failure)(nil), // 38: llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest.Failure
}
var file_api_v1_model_manager_service_proto_depIdxs = []int32{
	0,  // 0: llmariner.models.server.v1.ModelFormats.formats:type_name -> llmariner.models.server.v1.ModelFormat
	1,  // 1: llmariner.models.server.v1.Model.loading_status:type_name -> llmariner.models.server.v1.ModelLoadingStatus
	2,  // 2: llmariner.models.server.v1.Model.source_repository:type_name -> llmariner.models.server.v1.SourceRepository
	0,  // 3: llmariner.models.server.v1.Model.formats:type_name -> llmariner.models.server.v1.ModelFormat
	2,  // 4: llmariner.models.server.v1.CreateModelRequest.source_repository:type_name -> llmariner.models.server.v1.SourceRepository
	6,  // 5: llmariner.models.server.v1.ListModelsResponse.data:type_name -> llmariner.models.server.v1.Model
	14, // 6: llmariner.models.server.v1.ListBaseModelsResponse.data:type_name -> llmariner.models.server.v1.BaseModel
	3,  // 7: llmariner.models.server.v1.RegisterModelRequest.adapter:type_name -> llmariner.models.server.v1.AdapterType
	4,  // 8: llmariner.models.server.v1.RegisterModelRequest.quantization:type_name -> llmariner.models.server.v1.QuantizationType
	3,  // 9: llmariner.models.server.v1.ModelAttributes.adapter:type_name -> llmariner.models.server.v1.AdapterType
	4,  // 10: llmariner.models.server.v1.ModelAttributes.quantization:type_name -> llmariner.models.server.v1.QuantizationType
	0,  // 11: llmariner.models.server.v1.CreateBaseModelRequest.formats:type_name -> llmariner.models.server.v1.ModelFormat
	2,  // 12: llmariner.models.server.v1.CreateBaseModelRequest.source_repository:type_name -> llmariner.models.server.v1.SourceRepository
	0,  // 13: llmariner.models.server.v1.GetBaseModelPathResponse.formats:type_name -> llmariner.models.server.v1.ModelFormat
	2,  // 14: llmariner.models.server.v1.AcquireUnloadedBaseModelResponse.source_repository:type_name -> llmariner.models.server.v1.SourceRepository
	37, // 15: llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest.success:type_name -> llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest.Success
	38, // 16: llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest.failure:type_name -> llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest.Failure
	8,  // 17: llmariner.models.server.v1.ModelsService.ListModels:input_type -> llmariner.models.server.v1.ListModelsRequest
	10, // 18: llmariner.models.server.v1.ModelsService.GetModel:input_type -> llmariner.models.server.v1.GetModelRequest
	11, // 19: llmariner.models.server.v1.ModelsService.DeleteModel:input_type -> llmariner.models.server.v1.DeleteModelRequest
	7,  // 20: llmariner.models.server.v1.ModelsService.CreateModel:input_type -> llmariner.models.server.v1.CreateModelRequest
	13, // 21: llmariner.models.server.v1.ModelsService.ListBaseModels:input_type -> llmariner.models.server.v1.ListBaseModelsRequest
	17, // 22: llmariner.models.server.v1.ModelsWorkerService.CreateStorageConfig:input_type -> llmariner.models.server.v1.CreateStorageConfigRequest
	18, // 23: llmariner.models.server.v1.ModelsWorkerService.GetStorageConfig:input_type -> llmariner.models.server.v1.GetStorageConfigRequest
	10, // 24: llmariner.models.server.v1.ModelsWorkerService.GetModel:input_type -> llmariner.models.server.v1.GetModelRequest
	19, // 25: llmariner.models.server.v1.ModelsWorkerService.RegisterModel:input_type -> llmariner.models.server.v1.RegisterModelRequest
	21, // 26: llmariner.models.server.v1.ModelsWorkerService.PublishModel:input_type -> llmariner.models.server.v1.PublishModelRequest
	23, // 27: llmariner.models.server.v1.ModelsWorkerService.GetModelPath:input_type -> llmariner.models.server.v1.GetModelPathRequest
	26, // 28: llmariner.models.server.v1.ModelsWorkerService.GetModelAttributes:input_type -> llmariner.models.server.v1.GetModelAttributesRequest
	27, // 29: llmariner.models.server.v1.ModelsWorkerService.CreateBaseModel:input_type -> llmariner.models.server.v1.CreateBaseModelRequest
	28, // 30: llmariner.models.server.v1.ModelsWorkerService.GetBaseModelPath:input_type -> llmariner.models.server.v1.GetBaseModelPathRequest
	30, // 31: llmariner.models.server.v1.ModelsWorkerService.CreateHFModelRepo:input_type -> llmariner.models.server.v1.CreateHFModelRepoRequest
	32, // 32: llmariner.models.server.v1.ModelsWorkerService.GetHFModelRepo:input_type -> llmariner.models.server.v1.GetHFModelRepoRequest
	33, // 33: llmariner.models.server.v1.ModelsWorkerService.AcquireUnloadedBaseModel:input_type -> llmariner.models.server.v1.AcquireUnloadedBaseModelRequest
	35, // 34: llmariner.models.server.v1.ModelsWorkerService.UpdateBaseModelLoadingStatus:input_type -> llmariner.models.server.v1.UpdateBaseModelLoadingStatusRequest
	9,  // 35: llmariner.models.server.v1.ModelsService.ListModels:output_type -> llmariner.models.server.v1.ListModelsResponse
	6,  // 36: llmariner.models.server.v1.ModelsService.GetModel:output_type -> llmariner.models.server.v1.Model
	12, // 37: llmariner.models.server.v1.ModelsService.DeleteModel:output_type -> llmariner.models.server.v1.DeleteModelResponse
	6,  // 38: llmariner.models.server.v1.ModelsService.CreateModel:output_type -> llmariner.models.server.v1.Model
	15, // 39: llmariner.models.server.v1.ModelsService.ListBaseModels:output_type -> llmariner.models.server.v1.ListBaseModelsResponse
	16, // 40: llmariner.models.server.v1.ModelsWorkerService.CreateStorageConfig:output_type -> llmariner.models.server.v1.StorageConfig
	16, // 41: llmariner.models.server.v1.ModelsWorkerService.GetStorageConfig:output_type -> llmariner.models.server.v1.StorageConfig
	6,  // 42: llmariner.models.server.v1.ModelsWorkerService.GetModel:output_type -> llmariner.models.server.v1.Model
	20, // 43: llmariner.models.server.v1.ModelsWorkerService.RegisterModel:output_type -> llmariner.models.server.v1.RegisterModelResponse
	22, // 44: llmariner.models.server.v1.ModelsWorkerService.PublishModel:output_type -> llmariner.models.server.v1.PublishModelResponse
	24, // 45: llmariner.models.server.v1.ModelsWorkerService.GetModelPath:output_type -> llmariner.models.server.v1.GetModelPathResponse
	25, // 46: llmariner.models.server.v1.ModelsWorkerService.GetModelAttributes:output_type -> llmariner.models.server.v1.ModelAttributes
	14, // 47: llmariner.models.server.v1.ModelsWorkerService.CreateBaseModel:output_type -> llmariner.models.server.v1.BaseModel
	29, // 48: llmariner.models.server.v1.ModelsWorkerService.GetBaseModelPath:output_type -> llmariner.models.server.v1.GetBaseModelPathResponse
	31, // 49: llmariner.models.server.v1.ModelsWorkerService.CreateHFModelRepo:output_type -> llmariner.models.server.v1.HFModelRepo
	31, // 50: llmariner.models.server.v1.ModelsWorkerService.GetHFModelRepo:output_type -> llmariner.models.server.v1.HFModelRepo
	34, // 51: llmariner.models.server.v1.ModelsWorkerService.AcquireUnloadedBaseModel:output_type -> llmariner.models.server.v1.AcquireUnloadedBaseModelResponse
	36, // 52: llmariner.models.server.v1.ModelsWorkerService.UpdateBaseModelLoadingStatus:output_type -> llmariner.models.server.v1.UpdateBaseModelLoadingStatusResponse
	35, // [35:53] is the sub-list for method output_type
	17, // [17:35] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_v1_model_manager_service_proto_init() }
func file_api_v1_model_manager_service_proto_init() {
	if File_api_v1_model_manager_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_model_manager_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFormats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBaseModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBaseModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStorageConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBaseModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBaseModelPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBaseModelPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHFModelRepoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HFModelRepo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHFModelRepoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireUnloadedBaseModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireUnloadedBaseModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBaseModelLoadingStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBaseModelLoadingStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBaseModelLoadingStatusRequest_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_model_manager_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBaseModelLoadingStatusRequest_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_model_manager_service_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*UpdateBaseModelLoadingStatusRequest_Success_)(nil),
		(*UpdateBaseModelLoadingStatusRequest_Failure_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_model_manager_service_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_v1_model_manager_service_proto_goTypes,
		DependencyIndexes: file_api_v1_model_manager_service_proto_depIdxs,
		EnumInfos:         file_api_v1_model_manager_service_proto_enumTypes,
		MessageInfos:      file_api_v1_model_manager_service_proto_msgTypes,
	}.Build()
	File_api_v1_model_manager_service_proto = out.File
	file_api_v1_model_manager_service_proto_rawDesc = nil
	file_api_v1_model_manager_service_proto_goTypes = nil
	file_api_v1_model_manager_service_proto_depIdxs = nil
}
